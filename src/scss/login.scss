@import "main.scss";
body{
  background-color: #eeeef3;
}
.login-form{
  padding: 35px 0 16px;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  background-color: white;
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  @media (min-width:1170px){
  }
  form{
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    align-items: center;
  }
  h2 {
    font-size: 20px;
    margin-bottom: 18px;
    @media (min-width:1170px){
      font-size: 26px;
      width: 425px;
    }
  }

  input[type="text"], input[type="password"] {
    display: block;
    width: 300px;
    height: 50px;
    text-align: center;
    margin: 0 auto;
    margin-bottom: 15px;
  }
  .regorforget{
    width: 300px;
    display: flex;
    justify-content: space-between;
    a{
      color: $blue;
      font-size: 14px;
    }
  }
  /* The container */
  .rememberme {
    display: block;
    position: relative;
    padding-left: 25px;
    margin: 10px 0;
    cursor: pointer;
    font-size: 14px;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  /* Hide the browser's default checkbox */
  .rememberme input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
  }

  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    height: 16px;
    width: 16px;
    border: 2px solid $blue;
    border-radius: 3px;
  }

  /* On mouse-over, add a grey background color */
  .rememberme:hover input ~ .checkmark {
    background-color: $blue;
  }

  /* When the checkbox is checked, add a blue background */
  .rememberme input:checked ~ .checkmark {
    background-color: $blue;
  }

  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }

  /* Show the checkmark when checked */
  .rememberme input:checked ~ .checkmark:after {
    display: block;
  }

  /* Style the checkmark/indicator */
  .rememberme .checkmark:after {
    left: 3px;
    top: 0px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 3px 3px 0;
    -webkit-transform: rotate(45deg);
    -ms-transform: rotate(45deg);
    transform: rotate(45deg);
  }

  .login-button {
    background-color: $blue;
    color: white;
    text-align: center;
    text-transform: uppercase;
    font-size: 90%;
    width: 240px;
    height: 30px;
    margin: 15px auto;
    border: none;
    display: flex;
    align-items: center;
    justify-content: center;
    @media (min-width:1170px){
      width: 230px;
      height: 50px;
      align-self: flex-end;
    }
  }
  p {
  font-size: 14px;
  width: 90%;
  line-height: 1.5;
  @media (min-width:1170px){
    width: 50%;
  }
  a{
    text-decoration: underline;
    display: inline;
  }
  }

}

.login-features .container {
  background-color: #eeeef3;
  padding: 25px 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: flex-start;
  text-align: center;
  @media (min-width:1170px){
    margin: 75px auto;
    align-items: center;
  }
  h3{
    margin-bottom: 35px;
    font-size: 20px;
  }
  .login-features-box{
    display: flex;
    @media (min-width:1170px){
      justify-content: space-between;
    }
  }
  .login-feature {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    margin: 0 25px;
    width: 130px;
  }
  img{
    display: flex;
    align-items: center;
    width: 50px;
    max-height: 67px;
    margin-bottom: 20px;
  }
  p{
    font-size: 14.5px;
    line-height: 1.5;
    margin-bottom: 20px;
  }
}

